on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Draft Release

jobs:
  build:
    name: Create Release Draft
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build Jar
        run: ./gradlew shadowJar
      - name: Build Exe
        run: ./gradlew createExe
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Upload Release Asset - Jar
        id: upload-release-asset-jar
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/libs/btdex-all.jar
          asset_name: btdex-all-${{ steps.get_version.outputs.VERSION }}.jar
          asset_content_type: application/java-archive
      - name: Upload Release Asset - Jar checksum
        id: upload-release-asset-jar-checksum
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/checksums/btdex-all.jar.sha256
          asset_name: btdex-all-${{ steps.get_version.outputs.VERSION }}.jar.sha256
      - name: Upload Release Asset - Exe
        id: upload-release-asset-exe
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/launch4j/btdex.exe
          asset_name: btdex-win-${{ steps.get_version.outputs.VERSION }}.exe
          asset_content_type: application/vnd.microsoft.portable-executable
      - name: Upload Release Asset - Exe checksum
        id: upload-release-asset-exe-checksum
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/checksums/btdex.exe.sha256
          asset_name: btdex-win-${{ steps.get_version.outputs.VERSION }}.exe.sha256
          